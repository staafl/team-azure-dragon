@{
    ViewBag.Title = "Index";
}

<h2>Exercise</h2>

@using (Html.BeginForm())
{
    @(Html.Kendo().Grid<LearningSystem.Models.Exercise>()
    //@(Html.Kendo().Grid<LearningSystem.App.Areas.Administration.Views.ViewModels.ExerciseVM>()
    .Name("Grid")
    .Columns(columns =>
        {
            //columns.Bound(l => l.LessonName).ClientTemplate("#: LessonName #").EditorTemplateName("LessonDropdown");
            columns.Bound(l => l.Lesson).ClientTemplate("#= data.Lesson ? data.Lesson.Name : ''#").EditorTemplateName("LessonDropdown");
            columns.Bound(l => l.Name);
            columns.Bound(l => l.Description);
            columns.Bound(l => l.Order).EditorTemplateName("_intTextEditorTemplate");
            columns.Command(commands =>
            {
                commands.Edit();
                commands.Destroy();
                commands.Custom("ViewDetails").Click("showDetails");
                commands.Custom("Questions").Click("showQuestions");
            }).Title("Commands").Width(350);
        })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .DataSource(datasource => datasource
        .Ajax()
        .PageSize(5)
        .Model(model =>
        {
            model.Id(exercise => exercise.ExerciseId);
            model.Field(exercise => exercise.ExerciseId).Editable(false);
        })
        .ServerOperation(false)
        .Read(read => read.Action("Read", "Exercise"))
        .Create(create => create.Action("Create", "Exercise"))
        .Update(update => update.Action("Edit", "Exercise"))
        .Destroy(destroy => destroy.Action("Delete", "Exercise"))
        )
        .Pageable()
        .Sortable()
    )
    @Html.AntiForgeryToken()
}


<script>
    function showDetails(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '@Url.Action("Details", "Exercise", new { id = "_id" })';
        window.location.href = url.replace('_id', dataItem.ExerciseId);
    }

    function showQuestions(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '@Url.Action("Index", "Question", new { id = "_id" })';
        window.location.href = url.replace('_id', dataItem.ExerciseId);
    }

</script>


