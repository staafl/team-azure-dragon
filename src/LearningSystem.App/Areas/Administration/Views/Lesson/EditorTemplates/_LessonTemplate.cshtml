@model LearningSystem.Models.Lesson

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset class="form-horizontal">
        <legend>Lesson</legend>

        <div class="control-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label" })
            <div class="controls">
                @Html.EditorFor(model => model.Description)
                @Html.ValidationMessageFor(model => model.Description, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="control-group">
            @Html.LabelFor(model => model.SkillId, "SkillId", new { @class = "control-label" })
            <div class="controls">
                @(Html.Kendo().DropDownList()
                    .Name("Skill") // Name of the widget should be the same as the name of the property
                    .DataValueField("SkillId") // The value of the dropdown is taken from the EmployeeID property
                    .DataTextField("Name") // The text of the items is taken from the EmployeeName property
                    .BindTo((System.Collections.IEnumerable)ViewData["skills"]) // A list of all employees which is populated in the controller
                )
                @Html.ValidationMessageFor(model => model.SkillId, null, new { @class = "help-inline" })
            </div>
        </div>

        <div class="form-actions no-color">
            <input type="submit" value="Create" class="btn" />
        </div>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

