@{
    ViewBag.Title = "Index";
}

<h2>Lessons</h2>

@using (Html.BeginForm())
{
    @(Html.Kendo().Grid<LearningSystem.Models.Lesson>()
    .Name("Grid")
    .Columns(columns =>
        {
            columns.Bound(l => l.SkillId).ClientTemplate("#=Skill.Name#").EditorTemplateName("SkillDropdown");
            columns.Bound(l => l.Name);
            columns.Bound(l => l.Description);
            //columns.Bound(l => l.Requirements).ClientTemplate("#=generateRequirementTemplate(Requirements)#");//.EditorTemplateName("RequermentCheckBoxList");
            columns.Command(commands =>
            {
                commands.Edit();
                commands.Destroy();
                commands.Custom("ViewDetails").Click("showDetails");
                commands.Custom("Exercises").Click("showExercises");
            }).Title("Commands").Width(350);
        })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .DataSource(datasource => datasource
    .Ajax()
    .Model(model =>
    {
        model.Id(lesson => lesson.LessonId);
        model.Field(lesson => lesson.LessonId).Editable(false);
        model.Field(lesson => lesson.Requirements).Editable(false);
    })
    .ServerOperation(false)
    .Read(read => read.Action("Read", "Lesson"))
            .Create(create => create.Action("Create", "Lesson"))
            .Update(update => update.Action("Edit", "Lesson"))
            .Destroy(destroy => destroy.Action("Delete", "Lesson"))
    )
    .Pageable()
    .Sortable()
    )
    @Html.AntiForgeryToken()
}


<script>
    function showDetails(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = 'Lesson/Details/' + dataItem.SkillId;
    }

    function showExercises(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = 'Exercise/Index/' + dataItem.SkillId;
    }

    //function generateRequirementTemplate(data) {
    //    var template = "";
    //    if (data != null) {
    //        for (var i = 0; i < data.length; i++) {
    //            template = template + data[i].Name + "<br />";
    //        }
    //    }

    //    return template;
    //}
</script>


