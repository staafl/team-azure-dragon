@{
    ViewBag.Title = "Index";
}

<h2>Question</h2>

@using (Html.BeginForm())
{
    @(Html.Kendo().Grid<LearningSystem.Models.Question>()
    .Name("Grid")
    .Columns(columns =>
        {
            columns.Bound(l => l.ExerciseId).ClientTemplate("#=Exercise.Name#").EditorTemplateName("ExerciseDropdown");
            columns.Bound(l => l.Statement);
            columns.Bound(l => l.Order);
            columns.Bound(l => l.Points);
            columns.Bound(l => l.AnswerType);
            columns.Bound(l => l.AnswerContent);
            columns.Command(commands =>
            {
                commands.Edit();
                commands.Destroy();
                commands.Custom("ViewDetails").Click("showDetails");
            }).Title("Commands").Width(350);
        })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .DataSource(datasource => datasource
        .Ajax()
        .PageSize(5)
        .Model(model =>
        {
            model.Id(question => question.QuestionId);
            model.Field(question => question.QuestionId).Editable(false);
        })
        .ServerOperation(false)
        .Read(read => read.Action("Read", "Question"))
        .Create(create => create.Action("Create", "Question"))
        .Update(update => update.Action("Edit", "Question"))
        .Destroy(destroy => destroy.Action("Delete", "Question"))
        )
        .Pageable()
        .Sortable()
    )
    @Html.AntiForgeryToken()
}


<script>
    function showDetails(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        window.location.href = 'Question/Details/' + dataItem.QuestionId;
    }
</script>


