@{
    ViewBag.Title = "Administration";
}

<h2>Skills</h2>

@using (Html.BeginForm())
{
    @(Html.Kendo().Grid<LearningSystem.Models.Skill>()
    .Name("Grid")
    .Columns(columns =>
        {
            columns.Bound(b => b.Name);
            columns.Bound(b => b.Description).ClientTemplate("#= abbreviate(data.Description) #");
            ////columns.Bound(b => b.SkillId).Title("Select").ClientTemplate("<a href=Skill/Details/#=SkillId#>Tst</a>");
            //columns.Bound(b => b.SkillId).Title("Lessons").ClientTemplate(@Html.ActionLink("Lessons", "Index", "Lesson", null, new { ID = "#=SkillId#" }).ToHtmlString());
            //columns.Bound(b => b.SkillId).Title("Select").ClientTemplate(@Html.ActionLink("Details", "Details", new { ID = "#=SkillId#" }).ToHtmlString());
            columns.Command(commands =>
            {
                commands.Edit();
                commands.Destroy();
                commands.Custom("View Details").Click("showDetails");
                commands.Custom("Lessons").Click("showLessons");
            }).Title("Commands").Width(350);
        })
    .ToolBar(toolbar => toolbar.Create())
    .Editable(editable => editable.Mode(GridEditMode.InLine))
    .DataSource(datasource => datasource
    .Ajax()
    .PageSize(5)
    .ServerOperation(true)
    .Model(model =>
    {
        model.Id(skill => skill.SkillId);
        model.Field(skill => skill.SkillId).Editable(false);
    })
    .ServerOperation(false)
    .Read(read => read.Action("Read", "Skill"))
        .Create(create => create.Action("Create", "Skill"))
        .Update(update => update.Action("Edit", "Skill"))
        .Destroy(destroy => destroy.Action("Delete", "Skill"))
    )
    .Pageable()
    .Sortable()
    )
    @Html.AntiForgeryToken()
}


<script>
    function showDetails(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '@Url.Action("Details", "Skill", new { id = "_id" })';
        window.location.href = url.replace('_id', dataItem.SkillId);
    }

    function showLessons(e) {
        e.preventDefault();

        var dataItem = this.dataItem($(e.currentTarget).closest("tr"));
        var url = '@Url.Action("Index", "Lesson", new { id = "_id" })';
        window.location.href = url.replace('_id', dataItem.SkillId);
    }

    function abbreviate(data) {
        var template = "";
        if (data) {
            if (data.length > 30) {
                template = data.substr(0, 30) + "...";
            }
            else {
                template = data;
            }
        }
        return template;
    }

</script>


